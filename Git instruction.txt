Create new Repo
- Git hub site create new repo
- name the repo 
- add description
- make it public or private
- you can add README file as well
- you can also add gitingore file if you want

Create cloning a Repo to folder in your local device
- Create a folder : example: "Git"
- Open "Git Bash"
- cd into "Git" folder
- configure username and useremail
	- git config --global user.name "kljoshi"
	- git config --global user.email kapillaljoshi@gmail.com
- clone the repo
	- git clone https://github.com/kljoshi/Git_training-.git
- "ls" to check the clone folder

Steps to add new file in the repo
- create a file inside the folder where you cloned the repo
- type "git status" to check the status of the file
- to add the file 
	- git add <name_of_file>
- type "git status" to check status again
- now time to commit the file 
	- git commit -m "type in commit message"
- transfer the file to git account
	- git push -u origin master 


Push an existing repo from command line
- git remote add origin https://github.com/kljoshi/<name_of_repo>.git

Step 2:
Go to the repo in local machine using the path
type in 
- git remote (to check the links to the remote branch)

to add a remote link use
- git remote add <alias> <url>
- for example:
	git remote add origin https://github.com/kljoshi/<repo_name>.git

To view more information on the remote link use 
- git remote -v 
Note : it will give you the link to fetch and push.

Information is store in .git/config file 
- cat .git/config

If you want to remove the remote use 
- git remote rm origin/<alias>

To see branches on git use 
- git branch

To see remote branch use 
- git branch -r 

To see all the branches use 
- git branch -a

To clone a repo use 
- git clone <url>

To get the updated remote repo use 
- git fetch

To delete a remote branch us 
- git push origin --delete <name_of_remote_branch>

Real life workflow: 
(Persion 1) :
- git checkout master
- git fetch
- git merge origin/master
- git checkout -b feedback_form
- git add feedback.html
- git commit -m "Add customer feedback form"
- git fetch
- git push -u origin feedback_from

(Person 2):
- git checkout master
- git fetch 
- git merge origin/master
- git checkout -b feeadback_form origin/feedback_form
- git log
- git show 84b6adf0
- git commit -am "Add tour selector to feeadback from"
- git fetch 
- git push

(Person 1):
- git fetch 
- git log -p feedback_form..origin/feedback_form
- git merge origin/feedback_form
- git checkout master
- git fetch 
- git merge origin/master
- git merge feedback_form
- git push

